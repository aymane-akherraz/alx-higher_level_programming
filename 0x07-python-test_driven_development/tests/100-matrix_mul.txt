The ``100-matrix_mul.py`` module
================================
Using ``matrix_mul``
--------------------

import ``matrix_mul`` from the ``100-matrix_mul.py`` module:
	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Passing valid matrices:

	>>> m_a = [[1, 2], [3, 4]]
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	[[19, 22], [43, 50]]

	>>> m_a = [[1, 2]]
	>>> m_b = [[3, 4], [5, 6]]
	>>> matrix_mul(m_a, m_b)
	[[13, 16]]

Passing a list of ints as m_a:

	>>> m_b = [1, 2, 3, 4]
	>>> m_a = [[1, 2], [3, 4]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists

Passing a non valid matrice in m_b:

	>>> m_a = [[1, 2], [3, 4]]
	>>> m_b = [[1, 3, 4]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied

Passing other types (not list of lists):

	>>> m_a = "1, 2, 3, 4"
	>>> m_b = [[1, 2], [3, 4]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> m_a = [[1, 2], [3, 4]]
	>>> m_b = {"key" : "val"}
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_b must be a list

	>>> m_a = [1, 2, 3, 4]
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	>>> m_a = [[5, 6], [7, 8]]
	>>> m_b = (2, 1)
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_b must be a list

	>>> m_a = [1, 2, [3, 4]]
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	>>> m_a = 1024
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> m_a = 10.4
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a must be a list

Passing empty lists:

	>>> m_a = []
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	ValueError: m_a can't be empty

	>>> m_a = [[5, 6], [7, 8]]
	>>> m_b = [[]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	ValueError: m_b can't be empty

Passing None:

	>>> m_a = None
	>>> m_b = [[2, 3], [3, 2]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> m_b = None
	>>> m_a = [[2, 3], [3, 2]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_b must be a list

Passing nothing:

	>>> matrix_mul()
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Passing only one argument:
    >>> matrix_mul([[1, 2]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Passing more than two argument to matrix_mul.
    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[1, 2], [3, 4]]
    >>> m_c = [[4, 5], [7, 8]]
    >>> matrix_mul(m_a, m_b, m_c)
    Traceback (most recent call last):
    TypeError: matrix_mul() takes 2 positional arguments but 3 were given

Passing list of lists with other type (not int or float):

	>>> m_a = [[(2, 3), "2"], [{"k": "v"}, 4]]
	>>> m_b = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

	>>> m_b = [[(2, ), "2"], [{"k": "v"}, 4]]
	>>> m_a = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

Passing matrices with diffrent row size:

	>>> m_b = [[2, 2], [3, 4, 9]]
	>>> m_a = [[5, 6], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

	>>> m_b = [[2, 2], [3, 4]]
	>>> m_a = [[5], [7, 8]]
	>>> matrix_mul(m_a, m_b)
	Traceback (most recent call last):
	TypeError: each row of m_a must be of the same size
