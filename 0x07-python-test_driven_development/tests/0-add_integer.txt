The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

import ``add_integer`` from the ``0-add_integer`` module:

	>>> add_integer = __import__('0-add_integer').add_integer

Test with only first argument given:

	>>> add_integer(1)
	99

Test with two integers:

	>>> add_integer(0, 3)
	3

One negative and one positive:

	>>> add_integer(-1, 3)
	2

Two negative integers:

	>>> add_integer(-10, -80)
	-90

Test with 0 in both args:

	>>> add_integer(0, 0)
	0

Test with None as arg:

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

Passing String in the second arg:

	>>> add_integer(4, "School")
	Traceback (most recent call last):
	TypeError: b must be an integer

Test with no args passed:

	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

Test with a diffrent type:

	>>> add_integer([])
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer("hi")
	Traceback (most recent call last):
	TypeError: a must be an integer

Test with two big integers:

	>>> add_integer(9999999999999, 9999999999999)
	19999999999998

Test with float arg:

	>>> add_integer(100.3, -2)
	98

	>>> add_integer(100.33, -20.55)
	80

Test with two big float:

	>>> add_integer(88888888888.899988, 9999999999999.6843)
	10088888888887