The ``7-base_geometry`` module
============================

Using ``BaseGeometry``
------------------

import ``BaseGeometry`` from the ``7-base_geometry`` module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	
Creating an object of type BaseGeometry:

	>>> bg = BaseGeometry()

Test area():

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> bg.area(1)
	Traceback (most recent call last):
	TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

Test with valid args:

	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("width", 89)

Test with no args:

	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test with one argument:

	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

Passing non-string types as name:

	>>> bg.integer_validator(None, 3)

	>>> bg.integer_validator(4, 3)

	>>> bg.integer_validator(7.8, 3)

	>>> bg.integer_validator([], 3)

Passing non-integer types as value:

	>>> bg.integer_validator("name", None)
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("name", 3.55)
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("name", "str")
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("name", [])
	Traceback (most recent call last):
	TypeError: name must be an integer

Passing negeative values or zero as value:

	>>> bg.integer_validator("name", -4)
	Traceback (most recent call last):
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", -30)
	Traceback (most recent call last):
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", -2000000)
	Traceback (most recent call last):
	ValueError: name must be greater than 0

	>>> bg.integer_validator("name", 0)
	Traceback (most recent call last):
	ValueError: name must be greater than 0
	
